var searchIndex = JSON.parse('{\
"encrypted_package":{"doc":"A library that helps you send data in encrypted form.","t":[4,4,13,4,4,13,4,2,13,13,4,2,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,3,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,3,3,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,17,17],"n":["AesDecryptError","AesEncryptError","Build","BuildDefaultConfigError","CheckSignatureError","CheckedSerialize","CheckedSerializeError","Config","DataBytes","Decrypt","DecryptError","DefaultConfig","DefaultDefaultConfig","DefaultDefaultConfigError","Deserialize","DeserializeData","Encrypt","EncryptDataBytes","EncryptSenderPublicKeyPem","EncryptSession","EncryptSignature","GenerateIv","GenerateRandomBytesError","GenerateSession","GetRandom","Invalid","InvalidProofOfWorkDifficulty","Limit","NewError","Package","PkeyFromPrivateKey","PkeyFromPublicKey","PrivateKeyToPublicKeyPem","PublicKeyFromPem","ReadBytes","ReadSize","ReceiveError","SendError","SenderPublicKeyPem","Serialize","SerializeData","Session","SetPadding","SetPadding","Sign","SignError","Signature","SignerFromPkey","UpdateSigner","UpdateVerifier","ValidateSize","ValidateSizeError","VerifierFromPkey","Verify","WriteBytes","WriteSize","areceive","asend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_proof_of_work","check_signature","config","config","consts","data","decrypt","deserialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generate_proof_of_work","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","provide","public_data","receive","send","serialize","sign","source","source","source","source","source","source","source","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Config","DefaultConfig","DefaultConfigBuilder","aes_aad","aes_aad","aes_aad","aes_iv","aes_iv","aes_iv","borrow","borrow","borrow_mut","borrow_mut","build","builder","default","deserialize","fmt","from","from","into","into","proof_of_work_difficulty","proof_of_work_difficulty","proof_of_work_difficulty","serialize","session_length","session_length","session_length","try_default","try_from","try_from","try_into","try_into","type_id","type_id","PROOF_OF_WORK_DEFAULT_DIFFICULTY","SESSION_RANDOM_BYTES_DEFAULT_LENGTH"],"q":["encrypted_packageencrypted_package::AesDecryptError","encrypted_package::AesEncryptError","encrypted_package::BuildDefaultConfigError","","encrypted_package::CheckSignatureError","","","","","","encrypted_package::CheckedSerializeError","encrypted_package::DecryptError","","","","","encrypted_package::DefaultDefaultConfigError","encrypted_package::GenerateRandomBytesError","encrypted_package::NewError","","","","","encrypted_package::ReceiveError","","","","encrypted_package::SendError","","","encrypted_package::SignError","","","","","","","","encrypted_package::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encrypted_package::consts",""],"d":["Error for AES decryption function.","Error for AES encryption function.","Failed to build the config.","Error for build.","Error for signature checking function.","Failed to serialize with a size check.","Error for serialization with size check function.","","Failed to decrypt data bytes.","Failed to decrypt using <code>openssl</code> cipher.","Error for decrypt.","","Failed to make the default config.","Error for try_default.","Failed to deserialize bytes.","Failed to deserialize data.","Failed to encrypt using <code>openssl</code> cipher.","Failed to encrypt a data bytes.","Failed to encrypt a sender public key PEM.","Failed to encrypt a session.","Failed to encrypt a signature.","Failed to generate random bytes for AES IV.","Error for random bytes generation function.","Failed to generate a session.","Failed to get random bytes.","Greater than <code>isize::MAX</code>.","Invalid proof of work difficulty","Limit reached.","Error for new.","Encrypted package struct. <code>PD</code> is public data type, which …","Failed to convert private key to a PKey.","Failed to convert a public key to PKey.","Failed to convert private key to a public key PEM.","Failed to convert public key to PEM.","Failed to read bytes.","Failed to read a size.","Error for receive and areceive if “async” feature is …","Error for send and asend if “async” feature is enabled.","Failed to decrypt a sender public key PEM.","Failed to serialize with <code>bincode</code>.","Failed to serialize a data.","Failed to decrypt a session.","Failed to set padding.","Failed to set a padding.","Failed to sign.","Error for sign.","Failed to decrypt a signature.","Failed to convert a PKey to a signer.","Failed to update a signer.","Failed to update a verifier.","Failed to validate a size.","Error for size validation function.","Failed to convert a PKey to a verifier.","Failed to verify.","Failed to write bytes.","Failed to write size.","Receives bytes from a <code>r</code> with <code>size_limit</code> limit and …","Sends <code>self</code> to <code>w</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks what current hash’s hex starts with …","Checks that the sender has signed current hash with his …","All you need to configure encrypted packages.","Accessor for config.","All consts for encrypted package.","Accessor for data.","With the <code>private_key</code> it decrypts data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generates a proof-of-work with difficulty …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new encrypted package with <code>config</code>.","","","","","","","","","","","","","","Accessor for public data.","Receives bytes from a <code>r</code> with <code>size_limit</code> limit and …","Sends <code>self</code> to <code>w</code>.","","Signs the current hash with the <code>private_key</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for configs with useful fields.","Default config for <code>Package</code>.","Builder for <code>DefaultConfig</code>. See <code>DefaultConfig</code> for more …","Authentication associated data for AES.","","Sets the new aes_aad .","Initialization vector for AES.","","Sets the new aes_iv .","","","","","Builds new config","Creates “empty” <code>DefaultConfigBuilder</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Proof of work difficulty (zeros count in the beggining of …","","Sets the new proof_of_work_difficulty .","","Length of session (key for AES encryption of all data).","","Sets the new session_length .","Creates default <code>DefaultConfig</code>.","","","","","","","Difficulty of proof of work. Also count of zeros in the …","Length of session for AES encryption of all data."],"i":[0,0,17,0,0,6,0,0,10,11,0,0,19,0,4,10,14,19,20,19,20,15,0,19,18,21,15,21,0,0,20,8,20,8,4,4,0,0,10,16,19,10,8,20,20,0,10,20,20,8,4,0,8,8,6,6,3,3,11,14,15,16,8,10,17,18,19,4,6,20,21,3,11,14,15,16,8,10,17,18,19,4,6,20,21,3,3,3,0,3,0,3,3,3,11,11,14,14,15,15,16,16,8,8,10,10,17,17,18,18,19,19,4,4,6,6,20,20,21,21,11,11,14,14,15,15,16,16,8,10,10,10,17,17,18,18,19,19,19,19,19,19,4,4,4,6,6,20,21,3,3,11,14,15,16,8,10,17,18,19,4,6,20,21,3,3,11,14,15,16,8,10,17,18,19,4,6,20,21,3,3,3,3,3,11,14,15,16,8,10,17,18,19,4,6,20,11,14,15,16,8,10,17,18,19,4,6,20,21,11,14,15,16,8,10,17,18,19,4,6,20,21,3,11,14,15,16,8,10,17,18,19,4,6,20,21,3,11,14,15,16,8,10,17,18,19,4,6,20,21,3,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,0,0,0,71,29,30,71,29,30,29,30,29,30,30,29,30,29,29,29,30,29,30,71,29,30,29,71,29,30,29,29,30,29,30,29,30,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[5,[3,4]]]],[[3,[2,[1]]],[[5,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,7],[3,[[5,[7,8]]]],0,[3],0,[3,2],[[3,9],[[5,[10]]]],[[],[[5,[3]]]],[[11,12],13],[[11,12],13],[[14,12],13],[[14,12],13],[[15,12],13],[[15,12],13],[[16,12],13],[[16,12],13],[[8,12],13],[[8,12],13],[[10,12],13],[[10,12],13],[[17,12],13],[[17,12],13],[[18,12],13],[[18,12],13],[[19,12],13],[[19,12],13],[[4,12],13],[[4,12],13],[[6,12],13],[[6,12],13],[[20,12],13],[[20,12],13],[[21,12],13],[[21,12],13],[[]],[22,11],[22,14],[[]],[18,15],[[]],[[]],[23,16],[[]],[22,10],[23,10],[[]],[15,17],[[]],[[]],[24,18],[17,19],[14,19],[[]],[22,19],[18,19],[23,19],[21,4],[[]],[23,4],[[]],[16,6],[[]],[[]],[[]],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[9,2],[[5,[3,19]]]],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[3,2],[[[2,[1]]],[[5,[3,4]]]],[[3,[2,[1]]],[[5,[6]]]],[3,5],[[3,9],[[5,[20]]]],[11,[[2,[26]]]],[14,[[2,[26]]]],[15,[[2,[26]]]],[16,[[2,[26]]]],[8,[[2,[26]]]],[10,[[2,[26]]]],[17,[[2,[26]]]],[18,[[2,[26]]]],[19,[[2,[26]]]],[4,[[2,[26]]]],[6,[[2,[26]]]],[20,[[2,[26]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[29],[[30,[32,[31]]],30],[[]],[29],[[30,[32,[31]]],30],[[]],[[]],[[]],[[]],[30,[[5,[29,15]]]],[[],30],[[],30],[[],[[5,[29]]]],[[29,12],13],[[]],[[]],[[]],[[]],[[],1],[29,1],[[30,1],30],[29,5],[[],1],[29,1],[[30,1],30],[[],[[5,[29,17]]]],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],0,0],"p":[[15,"usize"],[4,"Option"],[3,"Package"],[4,"ReceiveError"],[4,"Result"],[4,"SendError"],[15,"bool"],[4,"CheckSignatureError"],[3,"Rsa"],[4,"DecryptError"],[4,"AesDecryptError"],[3,"Formatter"],[6,"Result"],[4,"AesEncryptError"],[4,"BuildDefaultConfigError"],[4,"CheckedSerializeError"],[4,"DefaultDefaultConfigError"],[4,"GenerateRandomBytesError"],[4,"NewError"],[4,"SignError"],[4,"ValidateSizeError"],[3,"ErrorStack"],[6,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"DefaultConfig"],[3,"DefaultConfigBuilder"],[15,"u8"],[3,"Vec"],[13,"Decrypt"],[13,"Encrypt"],[13,"GenerateIv"],[13,"InvalidProofOfWorkDifficulty"],[13,"PkeyFromPublicKey"],[13,"PublicKeyFromPem"],[13,"SetPadding"],[13,"UpdateVerifier"],[13,"VerifierFromPkey"],[13,"Verify"],[13,"Serialize"],[13,"DataBytes"],[13,"DeserializeData"],[13,"SenderPublicKeyPem"],[13,"Session"],[13,"Signature"],[13,"Build"],[13,"GetRandom"],[13,"DefaultDefaultConfig"],[13,"EncryptDataBytes"],[13,"EncryptSession"],[13,"GenerateSession"],[13,"SerializeData"],[13,"Deserialize"],[13,"ReadBytes"],[13,"ReadSize"],[13,"ValidateSize"],[13,"CheckedSerialize"],[13,"WriteBytes"],[13,"WriteSize"],[13,"EncryptSenderPublicKeyPem"],[13,"EncryptSignature"],[13,"PkeyFromPrivateKey"],[13,"PrivateKeyToPublicKeyPem"],[13,"SetPadding"],[13,"Sign"],[13,"SignerFromPkey"],[13,"UpdateSigner"],[8,"Config"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
